/* automatically generated by csbindgen */

#[allow(unused)]
use ::std::os::raw::*;

use super::offsetallocator::*;


#[no_mangle]
pub unsafe extern "C" fn csbindgen_Allocator_reset(
    this: *mut Allocator
)
{
    Allocator_reset(
        this
    )
}

#[no_mangle]
pub unsafe extern "C" fn csbindgen_Allocator_allocate(
    this: *mut Allocator,
    size: c_uint
) -> Allocation
{
    Allocator_allocate(
        this,
        size
    )
}

#[no_mangle]
pub unsafe extern "C" fn csbindgen_Allocator_free(
    this: *mut Allocator,
    allocation: Allocation
)
{
    Allocator_free(
        this,
        allocation
    )
}

#[no_mangle]
pub unsafe extern "C" fn csbindgen_Allocator_allocationSize(
    this: *const Allocator,
    allocation: Allocation
) -> c_uint
{
    Allocator_allocationSize(
        this,
        allocation
    )
}

#[no_mangle]
pub unsafe extern "C" fn csbindgen_Allocator_storageReport(
    this: *const Allocator
) -> StorageReport
{
    Allocator_storageReport(
        this
    )
}

#[no_mangle]
pub unsafe extern "C" fn csbindgen_Allocator_storageReportFull(
    this: *const Allocator
) -> StorageReportFull
{
    Allocator_storageReportFull(
        this
    )
}

#[no_mangle]
pub unsafe extern "C" fn csbindgen_Allocator_Allocator(
    this: *mut Allocator,
    size: c_uint,
    maxAllocs: c_uint
)
{
    Allocator_Allocator(
        this,
        size,
        maxAllocs
    )
}

#[no_mangle]
pub unsafe extern "C" fn csbindgen_Allocator_Allocator1(
    this: *mut Allocator,
    other: *mut Allocator
)
{
    Allocator_Allocator1(
        this,
        other
    )
}

#[no_mangle]
pub unsafe extern "C" fn csbindgen_Allocator_Allocator_destructor(
    this: *mut Allocator
)
{
    Allocator_Allocator_destructor(
        this
    )
}

    